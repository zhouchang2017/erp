<?php

namespace App\Nova;

use Laravel\Nova\Fields\Avatar;
use Laravel\Nova\Fields\BelongsTo;
use Laravel\Nova\Fields\DateTime;
use Laravel\Nova\Fields\HasMany;
use Laravel\Nova\Fields\ID;
use Illuminate\Http\Request;
use Laravel\Nova\Fields\Number;
use Laravel\Nova\Http\Requests\NovaRequest;
use Laravel\Nova\Panel;
use R64\NovaFields\Text;

class DealpawProduct extends Resource
{
    /**
     * The model the resource corresponds to.
     *
     * @var string
     */
    public static $model = \App\Modules\Channel\Dealpaw\Models\DealpawProduct::class;

    /**
     * The single value that should be used to represent the resource when being displayed.
     *
     * @var string
     */
    public static $title = 'id';

    /**
     * The columns that should be searched.
     *
     * @var array
     */
    public static $search = [
        'id',
        'name',
        'code',
    ];

    public static $category = "Dealpaw";

    public function title()
    {
        return $this->model()->name . ' ' . $this->model()->options; // TODO: Change the autogenerated stub
    }


    /**
     * Get the fields displayed by the resource.
     *
     * @param  \Illuminate\Http\Request $request
     * @return array
     */
    public function fields(Request $request)
    {
        return [
            ID::make()->sortable(),

            Avatar::make('Image')->thumbnail(function () {
                return $this->image;
            }),

            Text::make('Name')->readOnly(),

            Text::make('Attribute', function () {
                return $this->model()->options;
            }),

            Text::make('Code')->readOnly(),

            HasMany::make('Prices', 'prices', DealpawProductPrice::class),

            Number::make('Stock'),

            \R64\NovaFields\Number::make('Sold')->readOnly(),

            BelongsTo::make('Relation Variant', 'localVariant', ProductVariant::class)
                ->searchable()
                ->prepopulate()
                ->hideFromIndex(),

//            DateTime::make('Updated At'),

            (new Panel('Info', $this->variantInfo())),
        ];
    }

    private function variantInfo()
    {
        return [
            Number::make('Width')->hideFromIndex(),
            Number::make('Height')->hideFromIndex(),
            Number::make('Depth')->hideFromIndex(),
            Number::make('Weight')->hideFromIndex(),
        ];
    }

    /**
     * Get the cards available for the request.
     *
     * @param  \Illuminate\Http\Request $request
     * @return array
     */
    public function cards(Request $request)
    {
        return [];
    }

    /**
     * Get the filters available for the resource.
     *
     * @param  \Illuminate\Http\Request $request
     * @return array
     */
    public function filters(Request $request)
    {
        return [];
    }

    /**
     * Get the lenses available for the resource.
     *
     * @param  \Illuminate\Http\Request $request
     * @return array
     */
    public function lenses(Request $request)
    {
        return [];
    }

    /**
     * Get the actions available for the resource.
     *
     * @param  \Illuminate\Http\Request $request
     * @return array
     */
    public function actions(Request $request)
    {
        return [];
    }
}
